// <auto-generated />
using System;
using ApospReport.DataStore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ApospReport.DataStore.Migrations
{
    [DbContext(typeof(ApospReportDbContext))]
    [Migration("20210921121020_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ApospReport.Domain.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("BankViewTimestamp")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("bank_view_timestamp");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_accounts");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("ApospReport.Domain.Models.BankItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("integer")
                        .HasColumnName("account_id");

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<int>("DefinitionId")
                        .HasColumnType("integer")
                        .HasColumnName("definition_id");

                    b.HasKey("Id")
                        .HasName("pk_bank_items");

                    b.HasIndex("AccountId")
                        .HasDatabaseName("ix_bank_items_account_id");

                    b.HasIndex("DefinitionId")
                        .HasDatabaseName("ix_bank_items_definition_id");

                    b.ToTable("bank_items");
                });

            modelBuilder.Entity("ApospReport.Domain.Models.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("integer")
                        .HasColumnName("account_id");

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<int>("DefinitionId")
                        .HasColumnType("integer")
                        .HasColumnName("definition_id");

                    b.HasKey("Id")
                        .HasName("pk_inventory_items");

                    b.HasIndex("AccountId")
                        .HasDatabaseName("ix_inventory_items_account_id");

                    b.HasIndex("DefinitionId")
                        .HasDatabaseName("ix_inventory_items_definition_id");

                    b.ToTable("inventory_items");
                });

            modelBuilder.Entity("ApospReport.Domain.Models.ItemDefinition", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<bool>("IsStackable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_stackable");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_item_definitions");

                    b.ToTable("item_definitions");
                });

            modelBuilder.Entity("ApospReport.Domain.Models.BankItem", b =>
                {
                    b.HasOne("ApospReport.Domain.Models.Account", "Account")
                        .WithMany("BankItems")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("fk_bank_items_accounts_account_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApospReport.Domain.Models.ItemDefinition", "Definition")
                        .WithMany("BankItems")
                        .HasForeignKey("DefinitionId")
                        .HasConstraintName("fk_bank_items_item_definitions_definition_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Definition");
                });

            modelBuilder.Entity("ApospReport.Domain.Models.InventoryItem", b =>
                {
                    b.HasOne("ApospReport.Domain.Models.Account", "Account")
                        .WithMany("InventoryItems")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("fk_inventory_items_accounts_account_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApospReport.Domain.Models.ItemDefinition", "Definition")
                        .WithMany("InventoryItems")
                        .HasForeignKey("DefinitionId")
                        .HasConstraintName("fk_inventory_items_item_definitions_definition_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Definition");
                });

            modelBuilder.Entity("ApospReport.Domain.Models.Account", b =>
                {
                    b.Navigation("BankItems");

                    b.Navigation("InventoryItems");
                });

            modelBuilder.Entity("ApospReport.Domain.Models.ItemDefinition", b =>
                {
                    b.Navigation("BankItems");

                    b.Navigation("InventoryItems");
                });
#pragma warning restore 612, 618
        }
    }
}
