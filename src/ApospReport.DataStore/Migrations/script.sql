CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20211123163259_InitialCreate') THEN
    CREATE TABLE accounts (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        username character varying(12) NOT NULL,
        base64encoded_screenshot text NULL,
        updated_at timestamp without time zone NOT NULL,
        attack_xp integer NOT NULL,
        attack_current_level integer NOT NULL,
        attack_level integer NOT NULL,
        defense_xp integer NOT NULL,
        defense_current_level integer NOT NULL,
        defense_level integer NOT NULL,
        strength_xp integer NOT NULL,
        strength_current_level integer NOT NULL,
        strength_level integer NOT NULL,
        hits_xp integer NOT NULL,
        hits_current_level integer NOT NULL,
        hits_level integer NOT NULL,
        ranged_xp integer NOT NULL,
        ranged_current_level integer NOT NULL,
        ranged_level integer NOT NULL,
        prayer_xp integer NOT NULL,
        prayer_current_level integer NOT NULL,
        prayer_level integer NOT NULL,
        magic_xp integer NOT NULL,
        magic_current_level integer NOT NULL,
        magic_level integer NOT NULL,
        cooking_xp integer NOT NULL,
        cooking_current_level integer NOT NULL,
        cooking_level integer NOT NULL,
        woodcut_xp integer NOT NULL,
        woodcut_current_level integer NOT NULL,
        woodcut_level integer NOT NULL,
        fletching_xp integer NOT NULL,
        fletching_current_level integer NOT NULL,
        fletching_level integer NOT NULL,
        fishing_xp integer NOT NULL,
        fishing_current_level integer NOT NULL,
        fishing_level integer NOT NULL,
        firemaking_xp integer NOT NULL,
        firemaking_current_level integer NOT NULL,
        firemaking_level integer NOT NULL,
        crafting_xp integer NOT NULL,
        crafting_current_level integer NOT NULL,
        crafting_level integer NOT NULL,
        smithing_xp integer NOT NULL,
        smithing_current_level integer NOT NULL,
        smithing_level integer NOT NULL,
        mining_xp integer NOT NULL,
        mining_current_level integer NOT NULL,
        mining_level integer NOT NULL,
        herblaw_xp integer NOT NULL,
        herblaw_current_level integer NOT NULL,
        herblaw_level integer NOT NULL,
        agility_xp integer NOT NULL,
        agility_current_level integer NOT NULL,
        agility_level integer NOT NULL,
        thieving_xp integer NOT NULL,
        thieving_current_level integer NOT NULL,
        thieving_level integer NOT NULL,
        bank_view_timestamp timestamp without time zone NULL,
        CONSTRAINT pk_accounts PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20211123163259_InitialCreate') THEN
    CREATE TABLE item_definitions (
        id integer NOT NULL,
        name character varying(100) NOT NULL,
        is_stackable boolean NOT NULL,
        CONSTRAINT pk_item_definitions PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20211123163259_InitialCreate') THEN
    CREATE TABLE bank_items (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        item_definition_id integer NOT NULL,
        count integer NOT NULL,
        account_id integer NOT NULL,
        position integer NOT NULL,
        CONSTRAINT pk_bank_items PRIMARY KEY (id),
        CONSTRAINT fk_bank_items_accounts_account_id FOREIGN KEY (account_id) REFERENCES accounts (id) ON DELETE CASCADE,
        CONSTRAINT fk_bank_items_item_definitions_item_definition_id FOREIGN KEY (item_definition_id) REFERENCES item_definitions (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20211123163259_InitialCreate') THEN
    CREATE TABLE inventory_items (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        item_definition_id integer NOT NULL,
        count integer NOT NULL,
        account_id integer NOT NULL,
        position integer NOT NULL,
        CONSTRAINT pk_inventory_items PRIMARY KEY (id),
        CONSTRAINT fk_inventory_items_accounts_account_id FOREIGN KEY (account_id) REFERENCES accounts (id) ON DELETE CASCADE,
        CONSTRAINT fk_inventory_items_item_definitions_item_definition_id FOREIGN KEY (item_definition_id) REFERENCES item_definitions (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20211123163259_InitialCreate') THEN
    CREATE INDEX ix_bank_items_account_id ON bank_items (account_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20211123163259_InitialCreate') THEN
    CREATE INDEX ix_bank_items_item_definition_id ON bank_items (item_definition_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20211123163259_InitialCreate') THEN
    CREATE INDEX ix_inventory_items_account_id ON inventory_items (account_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20211123163259_InitialCreate') THEN
    CREATE INDEX ix_inventory_items_item_definition_id ON inventory_items (item_definition_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20211123163259_InitialCreate') THEN
    INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
    VALUES ('20211123163259_InitialCreate', '5.0.10');
    END IF;
END $EF$;
COMMIT;

